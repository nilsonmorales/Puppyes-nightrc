#!/bin/bash
#psnapshot
#Feb.14,2011
#rewritten by Don White  from original mtpaintsnapshot.sh

#------------------------------
#Demonstration of Zigbert's localisation method
#------------------------------

VERSION=1.3

APPDIR="`dirname $0`"
[ "$APPDIR" = "." ] && APPDIR="`pwd`"
export APPDIR="$APPDIR"

#set language
TMP="`ls -1 $APPDIR/locals/ | grep ${LANG%.*}`"
. $APPDIR/locals/en_US:english #always run to fill gaps in translation
#fallback to macrolanguage if available (ISO 639-1 two letter code: en, es, fr, etc.)
[ -z $TMP ] && TMP="`ls -1 $APPDIR/locals/ | grep ${LANG%_*}:`" && echo $TMP
[ "$TMP" != "en_US:english" ] && . $APPDIR/locals/$TMP 2> /dev/null



cd /root/my-documents
mkdir -p Screenshots
echo -e "\nlast_dir = /root/my-documents/Screenshots" > /tmp/add_text

cd /root
sed '/Screenshots/!s/last_dir = /toolbar99 =  /' .mtpaint  >  .mtpaint_new # substitute "foo" with "bar" EXCEPT for lines which contain "baz"
cat .mtpaint_new /tmp/add_text > .mtpaint_new2
mv -f .mtpaint_new2 .mtpaint
rm .mtpaint_new
rm /tmp/add_text

 

export Screenshot="	
<window title=\"$LOC200\">
	
  <frame      "$LOC201"     >
  <pixmap><input file>/usr/share/pixmaps/gtkam.png</input></pixmap>
  <vbox>
   <button>
    <input file icon=\"gtk-refresh\"></input>
    <label>"$LOC202"</label>
	<action>(echo 10; sleep 1 ; echo 20; sleep 1 ; echo 30 ; sleep 1 ; echo 40; sleep 1 ; echo 50 ; sleep 1 ; echo 60 ; sleep 1 ; echo 70 ; sleep 1 ; echo 80 ; sleep 1 ; echo 90 ; sleep 1 ; echo 100 ) | Xdialog --title 'Puppy Screenshot' --beep-after --wrap --screen-center --center --no-buttons --gauge '  $LOC300  ' 10 50 100   ; exec mtpaint -s &</action>
	<action>exit: Screenshot</action>
   </button>
   <button>
    <input file icon=\"gtk-apply\"></input>
    <label>  "$LOC203"  </label>
    <action>exec mtpaint -s &</action>
	<action>exit: Screenshot</action>
   </button>
   <button>
    <input file icon=\"gtk-quit\"></input>
    <label>"$LOC204"</label>
   </button>
 </vbox>
 </frame>
</window>"

I=$IFS; IFS=""
for STATEMENTS in  $(gtkdialog3 --program=Screenshot --center ); do
	eval $STATEMENTS
done
IFS=$I

exit






